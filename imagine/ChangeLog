      Copyright (c)  2005-2006  AtKaaZ.
      Permission is granted to copy, distribute and/or modify this document
      under the terms of the GNU Free Documentation License, Version 1.2
      or any later version published by the Free Software Foundation;
      with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
      Texts.  A copy of the license is included in the section entitled "GNU
      Free Documentation License".

Legend:
	* means DONE
	LU means last update on ... date

===========demlinks-0.0.23
LU: 08 October 2006

* MDMLFIFOBufferWithDUPsAndAI done. AI=auto intermediaries => unique IDs
within te environment that didn't exist before(or the program would
fail/throw); these intermediaries are used between the group and the children
nodes such that the group can now support duplicates. A group originally
cannot support duplicates directly linked to it because it would then be
unable to pinpoint an exact element within the group since we're using their
IDs to locate them within the group, thus a search of a duplicate within a
group would stop at the first encountered node even if it was supposed to
refer to another(dup).

* MDMLFIFOBufferWithDUPs done. Manually chosen intermediary IDs.

* let there be noted that both TDMLCursor and MDMLFIFOBuffer are using Domains
of unique elements, that is key/data pairs where key is the same and data are
elements that are unique within that key.

* renamed INSTALL.svn to autogen.sh  (because it doesn't really install, just
makes compile+link)

* added search script "./s" and symlinks; this script uses grep, whiptail and
vim to simplify searching for the given text ie. ./s main

* MDMLDomainPointer - a pointer that can be either NULL or it's pointee can be
only from a certain domain (=a list of items to choose from)

* trackable _fret() just by setting gTrackFRETs to true before the block that
needs to be tracked (no need to define any defs/macros) and after the block
set it to false

* arranged dmlenv into levels

* created a delete macro; if used without parentheses surrounding the
parameter(s) then it will call the original delete

* added ./src/cs script to update the cscope dbase; check
http://cscope.sourceforge.net/cscope_vim_tutorial.html you'll need to download
http://cscope.sourceforge.net/cscope_maps.vim and put it in ~/.vim/plugin/
then you could use ie. vim -t main  to go to one of the main() functions;

* added TDMLPointer

* added group comments ie. to avoid using some functions of macros for that to
be obvious like that; imagine a tree with root starting at main() ... u get
the picture!

* added TDMLCursor::Count()

* added IsLinkConsistent() consistency checks in a few points (dmlenv.cpp) that
does check if the link is consistent in both dbases; ie. Put(), Get(),
showRecords(), ShowContents(), NewLink(), ModLink() they've all been
protected; however this IsLinkConsistent() seems rather barbaric where it is
called, because some actions will be repeated ie. key=val may already exist in
primary but it is still checked again within IsLinkConsistent()

* Put() should work now; also note putInfo() is consistently modified to
handle itself with or without cursor.

* colour enabled error reporting with ^[[3Xm (X=0..9) ^[ is \x1B or C-v,C-[ in
vim

* added Put() and: NewLink() override

* made TRACKABLE_RETURNS display their param also

* weird acting TDMLCursor Get() with DB_SET and DB_NEXT but i guess this is
normal.

* unified new_transaction flags to macro TRANSACTION_FLAGS

* fixed string initialization from fUniq with std::string newstr(fUniq);

* fixed missing 'zvim' script

* if TERM="linux" then we automaticly invoke executable thru 'sudo': assumed
we're running from console and afaik root rights are needed then.

* when running ./1 if exitcode is 134 then most prolly you're running it from
console and mouse initialization fails, needs root, thus we do run the
executable thru sudo but even this doesn't work on ubuntu "Can't open
framebuffer /dev/fb0" (guess it depends on ubuntu setting and how u've
compiled allegro)

* added keys 1,2,3 and 4 to toggle those respective cams(views) thus all
active cams will act(move) at once (there was an earlier svn rev that could do
that but underlaying has changed since then)


==============demlinks-0.0.22
LU: 10 August 2006

* easier to pinpoint the errors by tripple clicking the output line with
'zvim' and then middle mouse button press to paste it(ie. in konsole) => opens
vim on the file&line with the error. (to test just put __tIF(test); somewhere
in the code then run it)

* fixed macros like _hif() that can get a semicolon after them and totally
ignore the block after that semicolon, now they don't the block until _fih is
still executed (if true) and the developer has to use _fihelse instead of else

* going windowed again; allegro 4.3.1 svn 7454 goes full screen by default

* pressing undefined keys now refreshes the camera's screen to show the
keyboard buffer in action(also remember there's the "`" key to press twice)

* standardizing most functions to return type of 'function' instead of other
types like bool or int

* fixed some stuff with the notification tracking system such as made auto
initialization by not using a pointer thus it is done pre main() entry(so only
#include "pnotetrk.h" is needed - actually g++ by includint pnotetrk.o should
do the trick); and
because of this we had to make cams[i] a pointer to an array otherwise they
would initialize(by constructors) before the notif.sys.

* mutex locked interrupt handler (timed*.cpp)

* base idea from '../babyplan/txt' implemented using berkeley db
(dmlenv.cpp)

* arithmetic expression(s) as binary trees will be used for key combination
detection (ie. cheat codes used in games) [polishform.cpp]

============demlinks-0.0.21
LU: 23 Aug 2005

* can't remember

===========demlinks-0.0.20
LU: 23 Aug 2005

* ifdef-ed, default to disabled, Time in input events. As secondary effect,
less overhead.

* disabled the unsatisfactory delay-on-playing actions, that is the piece of
code which tries to queue to actions only after the TimeDiff between prev and
current has elapsed; done that in favour of a faster response time based on
the fact that the user would react to what it sees on screen anyway so ie. if
he releases the key we wouldn't wanna keep the action executing for more 300ms
after that just to keep the diff between the key events.

===============demlinks-0.0.19
LU: 23 Aug 2005

* fixed smth like this, if you hold Q,E,A,D all together at the same time(same
time=when they cancel eachother out thus no motion is being performed on the
'chess' board) and then release them again at the same time, it succedes in
that the 'chess' board's position remains the same.(search for "recheck:" in
input.cpp)

* fixed regulation of executing actions by compromising the global timer to
increment at the same rate which the execution of actions needs.

* regulated execution timing

* continuity done

* added DDL.h generic double linked list, differs from SLL.h

* removed config.h from _gcdefs.h

* made sure playing actions is depending on game cycles

==============demlinks-0.0.18
LU: 22 Aug 2005

* trying to get rid of _gcdefs.h by making use of ../config.h

* cleanups in timed*.*

* made TimeDiff for generic and actions input

* and some things I don't remember

===========demlinks-0.0.17
LU: 21 Aug 2005

* added new global timer gTimer

* made key &mouse use same timer: gTimer

* changed timer of inputs(mouse&key) to keep the time difference between them inputs

* made granularity of gTimer (and all its descendants) = 1000 miliseconds / second.


============demlinks-0.0.16
LU: 19 Aug 2005

* done some cleanups

=============demlinks-0.0.15
LU: 19 Aug 2005
* introduced flags

=demlinks-0.0.14
LU: 18 Aug 2005
* at least the keys work somehow even tho there's some stray effect when turning the data displayed is no longer in line... oh yeah you can move if u repeatedly press keys

===========demlinks-0.0.13
* made actions and functions ... thing
* if the src seems hard to read/understand remember that the text doesn't matter at all, really. It's the relations which imply connection, that matter ... hence this program.

============demlinks-0.0.12
LU: 17.Aug.2005
* removed KEYDEBUG from main

==========demlinks-0.0.7
* temporary display of variables, on squares, use TAB to switch screens

==========demlinks-0.0.5
LU: 09 August 2005.

* transform any kind of input into generic input, then generic input into actions; an action means: on activation execute a function, on deactivation execute a(nother) function, if no deactivation function then the action gets deactivated after one (func) execution (while active). Like this:
        key   -\
         mouse-->-----> generic input ----> actions
        serial-/
this means that take any one of key,mouse or serial(don't mix), many or one inputs of that type will be converted into one input of 'generic input' type; then take many or one inputs of 'generic input' type and they will be converted into one action; an actions consists of one procedure(function) that gets executed. Any of those five items are serial meaning they push items into a FIFO buffer. The buffer may be read at any time by executing software even if the necessary combinations aren't complete yet to fulfill the next stage(ie. incomplete key combination, thus generic input isn't triggered this time). Action can be of type: once OR continous. Once type, gets executed only once. Continous type, gets executed until the deactivation combination is received(that is, some generic input triggers the deactivate part of this action). This type of actions only trigger active if they previously were inactive, likewise only trigger deactivation if they were previously active. Actions may be triggered by user in any part of the program, also they can be disabled to stop checking if they occur but keeping their previous state. Actions are taken one at once and executed, thus u cannot cumulate actions to sum-up to another action, use generic input type cumulation instead.

==========demlinks-0.0.4
LU: 09 August 2005

* modified lower level timedinput& key&mouse ones for future supporting of...

==========demlinks-0.0.1
LastUpdate: 02 August 2005
* descent alike camera motion succeded on 5 July 2005

