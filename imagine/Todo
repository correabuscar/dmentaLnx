      Copyright (c)  2005-2006  AtKaaZ.
      Permission is granted to copy, distribute and/or modify this document
      under the terms of the GNU Free Documentation License, Version 1.2
      or any later version published by the Free Software Foundation;
      with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
      Texts.  A copy of the license is included in the section entitled "GNU
      Free Documentation License".

Legend:
	/ means DONE
	$ means TODO
	LU means last update on ... date

==============demlinks-0.0.23
LU: 10 October 2006

/ prefix+suffix random string; uniqstr.h

$ check all berkeley db (and not only those) functions and see if any error is caused within them, they cleanup successfully and leave not leftover parts; ie. make sure they undo properly without disrupting the database

$ rewrite all bdb funx from dmlenv.cpp they're ugly!

$ need to work with locks, ie. unset DISABLE_LOCK and make it not deadlock!

$ running ./2 and pressing ctrl+c when sleep(5) acts, doesn't act as we'd
expect, the sigint signal is trapped and deinits the notify tracker but the
program doesn't stop there... apparently.

$ Count() is broken; Dbc->count() needs the cursor to be initialized otherwise
it throws EINVAL


====================demlinks-0.0.22
LU: 10 August 2006

$ and yes the text indeed doesn't keep the same square as when using only q/e
keys

$ lemme restate that performance(aka optimization/speed) is highly irrelevant
considering (one of) the main goal(s): accesibility (&flexibility) that is why
things are how they are in the code part.

$ reduce CPU consumption even further by making the main loop wait for a
signal which maybe a refresh signal or a timer signal

$ need to insert the inputs into berkeley db (dmlenv.cpp) and then get them
from those trees/lists

$ eventually insert variables and code from C++ into the 3D world so they can
be viewed/modified by the running program or by another similar program in
another thread; if an exception occurs in the first program, the second
program could debug and fix it and then have the first program continue; this
may seem similar to contemporary practices but at least the connections
between the items are not implied only in the viewer's brain and only exist at
the moment of execution by the processor, instead they are properly defined...

===================demlinks-0.0.21
LU: 23 Aug 2005
$ need to be able to pass values of lowlevel input(ie. mouse MickeyX) to
function that gets executed as action

===============demlinks-0.0.19
LU: 23 Aug 2005

$ TODO: crc on last x keys could launch a GI(generic input) [aka CRC-enabled
GenericInput]

$ some flaws with regulating execution, while ie. key pressed

$ fails PARANOIA_DEBUG set in config.h since cannot include it while conflicts
with some defs already included from allegro.h

$ have to do continuity of actions, play and replay of them acording to
timer(TimeDiff)

==============demlinks-0.0.17
LU: 21 Aug 2005
$ the goal is to execute the actions depending on the diff between the inputs,
that long to be the pause between the executed actions, same as the diff
between the inputs. Hmm....

=============demlinks-0.0.16
LU: 19 Aug 2005
$ must do smooth motion while holding key down, but not with flags since we need replay of input/actions; we need smth like speed of game in its time, speed regulation; hmm ON/OFF type actions, OR CONTINOUS type actions...

=============demlinks-0.0.14
LU: 18 Aug 2005
$ need to do Flags array but with a counter incrementing and decrementing on each set, now we have 2 shift keys on a bool which doesn't work like an 'is key held?'


